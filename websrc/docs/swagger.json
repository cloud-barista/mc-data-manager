{
    "swagger": "2.0",
    "info": {
        "description": "MC-Data-Manager REST API",
        "title": "MC-Data-Manager REST API",
        "contact": {
            "name": "API Support",
            "url": "http://cloud-barista.github.io",
            "email": "contact-to-cloud-barista@googlegroups.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "latest"
    },
    "basePath": "/",
    "paths": {
        "/backup": {
            "get": {
                "description": "Retrieve a list of all Tasks in the system.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Backup]"
                ],
                "summary": "Get all Tasks",
                "operationId": "GetAllBackupHandler",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved all Tasks",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Task"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/backup/nrdbms": {
            "post": {
                "description": "Export data from a MySQL database to SQL files.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Backup]"
                ],
                "summary": "Export data from MySQL",
                "operationId": "BackupNRDBPostHandler",
                "parameters": [
                    {
                        "description": "Parameters required for backup",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.BackupTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully backup data",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/backup/objectstorage": {
            "post": {
                "description": "Export data from a objectstorage  to files.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Backup]"
                ],
                "summary": "Export data from objectstorage",
                "operationId": "BackupOSPostHandler",
                "parameters": [
                    {
                        "description": "Parameters required for backup",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.BackupTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully backup data",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/backup/rdbms": {
            "post": {
                "description": "Export data from a MySQL database to SQL files.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Backup]"
                ],
                "summary": "Export data from MySQL",
                "operationId": "BackupRDBPostHandler",
                "parameters": [
                    {
                        "description": "Parameters required for backup",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.BackupTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully backup data",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/backup/{id}": {
            "get": {
                "description": "Get the details of a Task using its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Backup]"
                ],
                "summary": "Get a Task by ID",
                "operationId": "GetBackupHandler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved a Task",
                        "schema": {
                            "$ref": "#/definitions/models.Task"
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update the details of an existing Task using its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Backup]"
                ],
                "summary": "Update an existing Task",
                "operationId": "UpdateBackupHandler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Parameters required for updating a Task",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Schedule"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated the Task",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an existing Task using its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Backup]"
                ],
                "summary": "Delete a Task",
                "operationId": "DeleteBackupkHandler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted the Task",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/credentials": {
            "get": {
                "description": "Retrieve a list of all credentials in the system.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Credential]"
                ],
                "summary": "Get all credentials",
                "operationId": "ListCredentialsHandler",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved all credentials",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Task"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "save encrypted credential.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Credential]"
                ],
                "summary": "save encrypted credential.",
                "operationId": "CreateCredentialHandler",
                "parameters": [
                    {
                        "description": "Parameters required for Credential",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CredentialCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully saved credential",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Request",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/credentials/{id}": {
            "get": {
                "description": "Get the details of a Credential using its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Credential]"
                ],
                "summary": "Get a Credential by ID",
                "operationId": "GetCredentialHandler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Credential ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved credential",
                        "schema": {
                            "$ref": "#/definitions/models.Task"
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an existing credential using its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Credential]"
                ],
                "summary": "Delete a credential",
                "operationId": "DeleteCredentialHandler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Credential ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted Credential",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "404": {
                        "description": "Credential not found",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/generate": {
            "get": {
                "description": "Retrieve a list of all Tasks in the system.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Generate]"
                ],
                "summary": "Get all Tasks",
                "operationId": "GetAllGenerateHandler",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved all Tasks",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Task"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/generate/linux": {
            "post": {
                "description": "Generate test data on on-premise Linux.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Generate]"
                ],
                "summary": "Generate test data on on-premise Linux",
                "operationId": "GenerateLinuxPostHandler",
                "parameters": [
                    {
                        "description": "Parameters required to generate test data",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DataTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully generated test data",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Request",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/generate/nrdbms": {
            "post": {
                "description": "Generate test data on Object Storage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Generate]"
                ],
                "summary": "Generate test data on Object Storage",
                "operationId": "GenerateNRDBMSPostHandler",
                "parameters": [
                    {
                        "description": "Parameters required to generate test data",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GenarateTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully generated test data",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Request",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/generate/objectstorage": {
            "post": {
                "description": "Generate test data on Object Storage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Generate]"
                ],
                "summary": "Generate test data on Object Storage",
                "operationId": "GenerateObjectStoragePostHandler",
                "parameters": [
                    {
                        "description": "Parameters required to generate test data",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GenarateTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully generated test data",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Request",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/generate/rdbms": {
            "post": {
                "description": "Generate test data on RDBMS",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Generate]"
                ],
                "summary": "Generate test data on RDBMS",
                "operationId": "GenerateRDBMSPostHandler",
                "parameters": [
                    {
                        "description": "Parameters required to generate test data",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GenarateTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully generated test data",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Request",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/generate/windows": {
            "post": {
                "description": "Generate test data on on-premise Windows.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Generate]"
                ],
                "summary": "Generate test data on on-premise Windows",
                "operationId": "GenerateWindowsPostHandler",
                "parameters": [
                    {
                        "description": "Parameters required to generate test data",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DataTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully generated test data",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Request",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/generate/{id}": {
            "get": {
                "description": "Get the details of a Task using its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Generate]"
                ],
                "summary": "Get a Task by ID",
                "operationId": "GetGenerateHandler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved a Task",
                        "schema": {
                            "$ref": "#/definitions/models.Task"
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update the details of an existing Task using its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Generate]"
                ],
                "summary": "Update an existing Task",
                "operationId": "UpdateGenerateHandler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Parameters required for updating a Task",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Schedule"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated the Task",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an existing Task using its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Generate]"
                ],
                "summary": "Delete a Task",
                "operationId": "DeleteGeneratekHandler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted the Task",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/migrate": {
            "get": {
                "description": "Retrieve a list of all Tasks in the system.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migrate]"
                ],
                "summary": "Get all Tasks",
                "operationId": "GetAllMigrateHandler",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved all Tasks",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Task"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/migrate/nrdbms": {
            "post": {
                "description": "Migrate data from NRDBMS to NRDBMS.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migrate]"
                ],
                "summary": "Migrate data from NRDBMS to NRDBMS",
                "operationId": "MigrationNRDBMSPostHandler",
                "parameters": [
                    {
                        "description": "Parameters required for migration",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MigrateTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully migrated data",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Request",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/migrate/objectstorage": {
            "post": {
                "description": "Migrate data from ObjectStorage to ObjectStorage.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migrate]"
                ],
                "summary": "Migrate data from ObjectStorage to ObjectStorage",
                "operationId": "MigrationObjectstoragePostHandler",
                "parameters": [
                    {
                        "description": "Parameters required for migration",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MigrateTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully migrated data",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Request",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/migrate/rdbms": {
            "post": {
                "description": "Migrate data from RDBMS to RDBMS.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migrate]"
                ],
                "summary": "Migrate data from RDBMS to RDBMS",
                "operationId": "MigrationRDBMSPostHandler",
                "parameters": [
                    {
                        "description": "Parameters required for migration",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MigrateTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully migrated data",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Request",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/migrate/{id}": {
            "get": {
                "description": "Get the details of a Task using its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migrate]"
                ],
                "summary": "Get a Task by ID",
                "operationId": "GetMigrateHandler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved a Task",
                        "schema": {
                            "$ref": "#/definitions/models.Task"
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update the details of an existing Task using its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migrate]"
                ],
                "summary": "Update an existing Task",
                "operationId": "UpdateMigrateHandler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Parameters required for updating a Task",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Schedule"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated the Task",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an existing Task using its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migrate]"
                ],
                "summary": "Delete a Task",
                "operationId": "DeleteMigratekHandler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted the Task",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/readyZ": {
            "get": {
                "description": "Get System Ready",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Already Check System]"
                ],
                "summary": "Get System Ready Handler",
                "operationId": "GetSystemReadyHandler",
                "responses": {
                    "200": {
                        "description": "System is Ready",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "404": {
                        "description": "Profile Load , Failed: err",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/restore": {
            "get": {
                "description": "Retrieve a list of all Tasks in the system.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Restore]"
                ],
                "summary": "Get all Tasks",
                "operationId": "GetAllRestoreHandler",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved all Tasks",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Task"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/restore/nrdbms": {
            "post": {
                "description": "Restore NoSQL from SQL files to a NoSQL database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Restore]"
                ],
                "summary": "Restore NoSQL from data to NoSQL",
                "operationId": "RestoreNRDBPostHandler",
                "parameters": [
                    {
                        "description": "Parameters required for Restore",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RestoreTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully Restore data",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/restore/objectstorage": {
            "post": {
                "description": "Restore objectstorage from files to a objectstorage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Restore]"
                ],
                "summary": "Restore data from objectstorage",
                "operationId": "RestoreOSPostHandler",
                "parameters": [
                    {
                        "description": "Parameters required for Restore",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RestoreTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully Restore data",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/restore/rdbms": {
            "post": {
                "description": "Restore MySQL from MySQL files to a MySQL database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Restore]"
                ],
                "summary": "Restore data from MySQL",
                "operationId": "RestoreRDBPostHandler",
                "parameters": [
                    {
                        "description": "Parameters required for Restore",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RestoreTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully Restore data",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/restore/{id}": {
            "get": {
                "description": "Get the details of a Task using its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Restore]"
                ],
                "summary": "Get a Task by ID",
                "operationId": "GetRestoreHandler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved a Task",
                        "schema": {
                            "$ref": "#/definitions/models.Task"
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update the details of an existing Task using its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Restore]"
                ],
                "summary": "Update an existing Task",
                "operationId": "UpdateRestoreHandler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Parameters required for updating a Task",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Schedule"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated the Task",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an existing Task using its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Restore]"
                ],
                "summary": "Delete a Task",
                "operationId": "DeleteRestorekHandler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted the Task",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/schedule": {
            "get": {
                "description": "Retrieve a list of all Schedules in the system.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Schedule]"
                ],
                "summary": "Get all Schedules",
                "operationId": "GetAllSchedulesHandler",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved all Schedules",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Schedule"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new Schedule and store it in the system.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Schedule]"
                ],
                "summary": "Create a new Schedule",
                "operationId": "CreateScheduleHandler",
                "parameters": [
                    {
                        "description": "Parameters required for creating a Schedule",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Schedule"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully created a Schedule",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/schedule/{id}": {
            "get": {
                "description": "Get the details of a Schedule using its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Schedule]"
                ],
                "summary": "Get a Schedule by ID",
                "operationId": "GetScheduleHandler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Schedule ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved a Schedule",
                        "schema": {
                            "$ref": "#/definitions/models.Schedule"
                        }
                    },
                    "404": {
                        "description": "Schedule not found",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update the details of an existing Schedule using its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Schedule]"
                ],
                "summary": "Update an existing Schedule",
                "operationId": "UpdateScheduleHandler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Schedule ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Parameters required for updating a Schedule",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Schedule"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated the Schedule",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "404": {
                        "description": "Schedule not found",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an existing Schedule using its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Schedule]"
                ],
                "summary": "Delete a Schedule",
                "operationId": "DeleteScheduleHandler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Schedule ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted the Schedule",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "404": {
                        "description": "Schedule not found",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/service/apply": {
            "post": {
                "description": "Execute the apply.sh script to set up resources.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Service]"
                ],
                "summary": "Apply Resources",
                "operationId": "applyResourceHandler",
                "responses": {
                    "200": {
                        "description": "Successfully applied resources",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to apply resources",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/service/clearAll": {
            "delete": {
                "description": "Delete an All Service and Task.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Service]"
                ],
                "summary": "Delete a Task",
                "operationId": "DeleteServiceAndTaskAllHandler",
                "responses": {
                    "200": {
                        "description": "Successfully deleted the All Service",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "404": {
                        "description": "Clear All Task , Failed",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/service/destroy": {
            "delete": {
                "description": "Execute the destroy.sh script to destroy resources.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Service]"
                ],
                "summary": "Destroy Resources",
                "operationId": "destroyResourceHandler",
                "responses": {
                    "200": {
                        "description": "Successfully destroyed resources",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to destroy resources",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/tasks": {
            "get": {
                "description": "Retrieve a list of all Tasks in the system.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Task]"
                ],
                "summary": "Get all Tasks",
                "operationId": "GetAllTasksHandler",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved all Tasks",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Task"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new Task and store it in the system.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Task]"
                ],
                "summary": "Create a new Task",
                "operationId": "CreateTaskHandler",
                "parameters": [
                    {
                        "description": "Parameters required for creating a Task",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Schedule"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully created a Task",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/tasks/{id}": {
            "get": {
                "description": "Get the details of a Task using its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Task]"
                ],
                "summary": "Get a Task by ID",
                "operationId": "GetTaskHandler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved a Task",
                        "schema": {
                            "$ref": "#/definitions/models.Task"
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update the details of an existing Task using its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Task]"
                ],
                "summary": "Update an existing Task",
                "operationId": "UpdateTaskHandler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Parameters required for updating a Task",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Schedule"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated the Task",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an existing Task using its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Task]"
                ],
                "summary": "Delete a Task",
                "operationId": "DeleteTaskHandler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted the Task",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.BackupTask": {
            "type": "object",
            "properties": {
                "sourceFilter": {
                    "$ref": "#/definitions/models.ObjectFilterParams"
                },
                "sourcePoint": {
                    "$ref": "#/definitions/models.ProviderConfig"
                },
                "targetPoint": {
                    "$ref": "#/definitions/models.ProviderConfig"
                }
            }
        },
        "models.BasicDataTask": {
            "type": "object",
            "properties": {
                "dummy": {
                    "$ref": "#/definitions/models.GenFileParams"
                },
                "sourceFilter": {
                    "$ref": "#/definitions/models.ObjectFilterParams"
                },
                "sourcePoint": {
                    "$ref": "#/definitions/models.ProviderConfig"
                },
                "targetPoint": {
                    "$ref": "#/definitions/models.ProviderConfig"
                }
            }
        },
        "models.BasicResponse": {
            "type": "object",
            "properties": {
                "Error": {
                    "type": "string"
                },
                "Result": {
                    "type": "string"
                }
            }
        },
        "models.CredentialCreateRequest": {
            "type": "object",
            "properties": {
                "credentialJson": {
                    "type": "object"
                },
                "cspType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "s3AccessKey": {
                    "type": "string"
                },
                "s3SecretKey": {
                    "type": "string"
                }
            }
        },
        "models.DataTask": {
            "type": "object",
            "properties": {
                "dummy": {
                    "$ref": "#/definitions/models.GenFileParams"
                },
                "operationId": {
                    "type": "string"
                },
                "sourceFilter": {
                    "$ref": "#/definitions/models.ObjectFilterParams"
                },
                "sourcePoint": {
                    "$ref": "#/definitions/models.ProviderConfig"
                },
                "targetPoint": {
                    "$ref": "#/definitions/models.ProviderConfig"
                }
            }
        },
        "models.GenFileParams": {
            "type": "object",
            "properties": {
                "checkCSV": {
                    "type": "boolean"
                },
                "checkGIF": {
                    "type": "boolean"
                },
                "checkJSON": {
                    "type": "boolean"
                },
                "checkPNG": {
                    "type": "boolean"
                },
                "checkSQL": {
                    "type": "boolean"
                },
                "checkServerJSON": {
                    "type": "boolean"
                },
                "checkServerSQL": {
                    "type": "boolean"
                },
                "checkTXT": {
                    "type": "boolean"
                },
                "checkXML": {
                    "type": "boolean"
                },
                "checkZIP": {
                    "type": "boolean"
                },
                "sizeCSV": {
                    "type": "string"
                },
                "sizeGIF": {
                    "type": "string"
                },
                "sizeJSON": {
                    "type": "string"
                },
                "sizePNG": {
                    "type": "string"
                },
                "sizeSQL": {
                    "type": "string"
                },
                "sizeServerJSON": {
                    "type": "string"
                },
                "sizeServerSQL": {
                    "type": "string"
                },
                "sizeTXT": {
                    "type": "string"
                },
                "sizeXML": {
                    "type": "string"
                },
                "sizeZIP": {
                    "type": "string"
                }
            }
        },
        "models.GenarateTask": {
            "type": "object",
            "properties": {
                "dummy": {
                    "$ref": "#/definitions/models.GenFileParams"
                },
                "operationId": {
                    "type": "string"
                },
                "tag": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "targetPoint": {
                    "$ref": "#/definitions/models.ProviderConfig"
                }
            }
        },
        "models.MigrateTask": {
            "type": "object",
            "properties": {
                "sourceFilter": {
                    "$ref": "#/definitions/models.ObjectFilterParams"
                },
                "sourcePoint": {
                    "$ref": "#/definitions/models.ProviderConfig"
                },
                "targetPoint": {
                    "$ref": "#/definitions/models.ProviderConfig"
                }
            }
        },
        "models.ObjectFilterParams": {
            "type": "object",
            "properties": {
                "containExcludeYn": {
                    "type": "string"
                },
                "contains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "exact": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "maxSize": {
                    "type": "number"
                },
                "minSize": {
                    "type": "number"
                },
                "modifiedAfter": {
                    "type": "string"
                },
                "modifiedBefore": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "pathExcludeYn": {
                    "type": "string"
                },
                "sizeFilteringUnit": {
                    "type": "string"
                },
                "suffixes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.ProviderConfig": {
            "type": "object",
            "properties": {
                "bucket": {
                    "type": "string"
                },
                "credentialId": {
                    "type": "integer"
                },
                "databaseId": {
                    "type": "string"
                },
                "databaseName": {
                    "type": "string"
                },
                "endpoint": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "port": {
                    "type": "string"
                },
                "projectId": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.RestoreTask": {
            "type": "object",
            "properties": {
                "dummy": {
                    "$ref": "#/definitions/models.GenFileParams"
                },
                "operationId": {
                    "type": "string"
                },
                "sourceFilter": {
                    "$ref": "#/definitions/models.ObjectFilterParams"
                },
                "sourcePoint": {
                    "$ref": "#/definitions/models.ProviderConfig"
                },
                "targetPoint": {
                    "$ref": "#/definitions/models.ProviderConfig"
                }
            }
        },
        "models.Schedule": {
            "type": "object",
            "properties": {
                "ScheduleID": {
                    "type": "string"
                },
                "ScheduleName": {
                    "type": "string"
                },
                "cron": {
                    "type": "string"
                },
                "operationId": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/models.Status"
                },
                "tag": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.BasicDataTask"
                    }
                },
                "tz": {
                    "type": "string"
                }
            }
        },
        "models.Status": {
            "type": "string",
            "enum": [
                "active",
                "inactive",
                "pending",
                "completed",
                "failed"
            ],
            "x-enum-varnames": [
                "StatusActive",
                "StatusInactive",
                "StatusPending",
                "StatusCompleted",
                "StatusFailed"
            ]
        },
        "models.Task": {
            "type": "object",
            "properties": {
                "operationId": {
                    "type": "string"
                },
                "tag": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    }
}