basePath: /
definitions:
  controllers.AWSMigrationParams:
    properties:
      awsAccessKey:
        type: string
      awsBucket:
        type: string
      awsRegion:
        type: string
      awsSecretKey:
        type: string
    type: object
  controllers.GenDataParams:
    properties:
      accessKey:
        type: string
      bucket:
        type: string
      checkCSV:
        type: string
      checkGIF:
        type: string
      checkJSON:
        type: string
      checkPNG:
        type: string
      checkSQL:
        type: string
      checkServerJSON:
        type: string
      checkServerSQL:
        type: string
      checkTXT:
        type: string
      checkXML:
        type: string
      checkZIP:
        type: string
      databaseId:
        type: string
      databaseName:
        type: string
      endpoint:
        type: string
      gcpCredentialJson:
        type: string
      host:
        type: string
      operationId:
        type: string
      password:
        type: string
      path:
        type: string
      port:
        type: string
      profileName:
        type: string
      projectId:
        type: string
      provider:
        type: string
      region:
        type: string
      secretKey:
        type: string
      sizeCSV:
        type: string
      sizeGIF:
        type: string
      sizeJSON:
        type: string
      sizePNG:
        type: string
      sizeSQL:
        type: string
      sizeServerJSON:
        type: string
      sizeServerSQL:
        type: string
      sizeTXT:
        type: string
      sizeXML:
        type: string
      sizeZIP:
        type: string
      username:
        type: string
    type: object
  controllers.GenMySQLParams:
    properties:
      databaseName:
        type: string
      host:
        type: string
      operationId:
        type: string
      password:
        type: string
      port:
        type: string
      profileName:
        type: string
      provider:
        type: string
      region:
        type: string
      username:
        type: string
    type: object
  controllers.LinuxMigrationParams:
    properties:
      path:
        type: string
    type: object
  controllers.MigrationForm:
    properties:
      awsAccessKey:
        type: string
      awsBucket:
        type: string
      awsRegion:
        type: string
      awsSecretKey:
        type: string
      databaseId:
        type: string
      databaseName:
        type: string
      gcpBucket:
        type: string
      gcpCredentialJson:
        type: string
      gcpRegion:
        type: string
      host:
        type: string
      ncpAccessKey:
        type: string
      ncpBucket:
        type: string
      ncpEndpoint:
        type: string
      ncpRegion:
        type: string
      ncpSecretKey:
        type: string
      operationId:
        type: string
      password:
        type: string
      path:
        type: string
      port:
        type: string
      profileName:
        type: string
      projectId:
        type: string
      provider:
        type: string
      region:
        type: string
      username:
        type: string
    type: object
  controllers.MigrationMySQLForm:
    properties:
      destDatabaseName:
        type: string
      destHost:
        type: string
      destPassword:
        type: string
      destPort:
        type: string
      destProvider:
        type: string
      destUsername:
        type: string
      srcDatabaseName:
        type: string
      srcHost:
        type: string
      srcPassword:
        type: string
      srcPort:
        type: string
      srcProvider:
        type: string
      srcUsername:
        type: string
    type: object
  controllers.MongoMigrationParams:
    properties:
      databaseName:
        type: string
      host:
        type: string
      password:
        type: string
      port:
        type: string
      username:
        type: string
    type: object
  controllers.NCPMigrationParams:
    properties:
      ncpAccessKey:
        type: string
      ncpBucket:
        type: string
      ncpEndpoint:
        type: string
      ncpRegion:
        type: string
      ncpSecretKey:
        type: string
    type: object
  models.BasicResponse:
    properties:
      Error:
        type: string
      Result:
        type: string
    type: object
info:
  contact:
    email: contact-to-cloud-barista@googlegroups.com
    name: API Support
    url: http://cloud-barista.github.io
  description: MC-Data-Manager REST API
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: MC-Data-Manager REST API
  version: latest
paths:
  /generate/dynamodb:
    post:
      consumes:
      - application/json
      description: Generate test data on AWS DynamoDB.
      parameters:
      - description: Parameters required to generate test data
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/controllers.GenDataParams'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully generated test data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Generate test data on AWS DynamoDB
      tags:
      - '[Test Data Generation]'
  /generate/firestore:
    post:
      consumes:
      - multipart/form-data
      description: Generate test data on GCP Firestore.
      parameters:
      - in: formData
        name: databaseId
        type: string
      - in: formData
        name: gcpCredentialJson
        type: string
      - in: formData
        name: projectId
        type: string
      - description: Parameters required to generate test data
        in: formData
        name: gcpCredential
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Successfully generated test data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Generate test data on GCP Firestore
      tags:
      - '[Test Data Generation]'
  /generate/gcp:
    post:
      consumes:
      - multipart/form-data
      description: Generate test data on GCP Cloud Storage.
      parameters:
      - in: formData
        name: accessKey
        type: string
      - in: formData
        name: bucket
        type: string
      - in: formData
        name: checkCSV
        type: string
      - in: formData
        name: checkGIF
        type: string
      - in: formData
        name: checkJSON
        type: string
      - in: formData
        name: checkPNG
        type: string
      - in: formData
        name: checkSQL
        type: string
      - in: formData
        name: checkServerJSON
        type: string
      - in: formData
        name: checkServerSQL
        type: string
      - in: formData
        name: checkTXT
        type: string
      - in: formData
        name: checkXML
        type: string
      - in: formData
        name: checkZIP
        type: string
      - in: formData
        name: databaseId
        type: string
      - in: formData
        name: databaseName
        type: string
      - in: formData
        name: endpoint
        type: string
      - in: formData
        name: gcpCredentialJson
        type: string
      - in: formData
        name: host
        type: string
      - in: formData
        name: operationId
        type: string
      - in: formData
        name: password
        type: string
      - in: formData
        name: path
        type: string
      - in: formData
        name: port
        type: string
      - in: formData
        name: profileName
        type: string
      - in: formData
        name: projectId
        type: string
      - in: formData
        name: provider
        type: string
      - in: formData
        name: region
        type: string
      - in: formData
        name: secretKey
        type: string
      - in: formData
        name: sizeCSV
        type: string
      - in: formData
        name: sizeGIF
        type: string
      - in: formData
        name: sizeJSON
        type: string
      - in: formData
        name: sizePNG
        type: string
      - in: formData
        name: sizeSQL
        type: string
      - in: formData
        name: sizeServerJSON
        type: string
      - in: formData
        name: sizeServerSQL
        type: string
      - in: formData
        name: sizeTXT
        type: string
      - in: formData
        name: sizeXML
        type: string
      - in: formData
        name: sizeZIP
        type: string
      - in: formData
        name: username
        type: string
      - description: Parameters required to generate test data
        in: formData
        name: gcpCredential
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Successfully generated test data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Generate test data on GCP Cloud Storage
      tags:
      - '[Test Data Generation]'
  /generate/linux:
    post:
      consumes:
      - application/json
      description: Generate test data on on-premise Linux.
      parameters:
      - description: Parameters required to generate test data
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/controllers.GenDataParams'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully generated test data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "400":
          description: Invalid Request
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Generate test data on on-premise Linux
      tags:
      - '[Test Data Generation]'
  /generate/mongodb:
    post:
      consumes:
      - application/json
      description: Generate test data on NCP MongoDB.
      parameters:
      - description: Parameters required to generate test data
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/controllers.GenDataParams'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully generated test data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Generate test data on NCP MongoDB
      tags:
      - '[Test Data Generation]'
  /generate/mysql:
    post:
      consumes:
      - application/json
      description: Generate test data on MySQL.
      parameters:
      - description: Parameters required to generate test data
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/controllers.GenMySQLParams'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully generated test data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Generate test data on MySQL
      tags:
      - '[Test Data Generation]'
  /generate/ncp:
    post:
      consumes:
      - application/json
      description: Generate test data on NCP Object Storage.
      parameters:
      - description: Parameters required to generate test data
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/controllers.GenDataParams'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully generated test data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Generate test data on NCP Object Storage
      tags:
      - '[Test Data Generation]'
  /generate/s3:
    post:
      consumes:
      - application/json
      description: Generate test data on AWS S3.
      parameters:
      - description: Parameters required to generate test data
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/controllers.GenDataParams'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully generated test data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Generate test data on AWS S3
      tags:
      - '[Test Data Generation]'
  /generate/windows:
    post:
      consumes:
      - application/json
      description: Generate test data on on-premise Windows.
      parameters:
      - description: Parameters required to generate test data
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/controllers.GenDataParams'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully generated test data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "400":
          description: Invalid Request
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Generate test data on on-premise Windows
      tags:
      - '[Test Data Generation]'
  /migration/dynamodb/firestore:
    post:
      consumes:
      - multipart/form-data
      description: Migrate data stored in AWS DynamoDB to Google Cloud Firestore.
      parameters:
      - in: formData
        name: awsAccessKey
        type: string
      - in: formData
        name: awsBucket
        type: string
      - in: formData
        name: awsRegion
        type: string
      - in: formData
        name: awsSecretKey
        type: string
      - in: formData
        name: databaseId
        type: string
      - in: formData
        name: gcpBucket
        type: string
      - in: formData
        name: gcpCredentialJson
        type: string
      - in: formData
        name: gcpRegion
        type: string
      - in: formData
        name: projectId
        type: string
      - description: Parameters required to generate test data
        in: formData
        name: gcpCredential
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Successfully migrated data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Migrate data from DynamoDB to Firestore
      tags:
      - '[Data Migration]'
  /migration/dynamodb/mongodb:
    post:
      consumes:
      - application/json
      description: Migrate data stored in AWS DynamoDB to Naver Cloud MongoDB.
      parameters:
      - description: Parameters required for AWS migration
        in: body
        name: AWSMigrationParams
        required: true
        schema:
          $ref: '#/definitions/controllers.AWSMigrationParams'
      - description: Parameters required for NCP migration
        in: body
        name: MongoMigrationParams
        required: true
        schema:
          $ref: '#/definitions/controllers.MongoMigrationParams'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully migrated data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Migrate data from DynamoDB to MongoDB
      tags:
      - '[Data Migration]'
  /migration/firestore/dynamodb:
    post:
      consumes:
      - multipart/form-data
      description: Migrate data stored in Google Cloud Firestore to AWS DynamoDB.
      parameters:
      - in: formData
        name: databaseId
        type: string
      - in: formData
        name: gcpBucket
        type: string
      - in: formData
        name: gcpCredentialJson
        type: string
      - in: formData
        name: gcpRegion
        type: string
      - in: formData
        name: projectId
        type: string
      - in: formData
        name: awsAccessKey
        type: string
      - in: formData
        name: awsBucket
        type: string
      - in: formData
        name: awsRegion
        type: string
      - in: formData
        name: awsSecretKey
        type: string
      - description: Parameters required to generate test data
        in: formData
        name: gcpCredential
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Successfully migrated data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Migrate data from Firestore to DynamoDB
      tags:
      - '[Data Migration]'
  /migration/firestore/mongodb:
    post:
      consumes:
      - multipart/form-data
      description: Migrate data stored in Google Cloud Firestore to Naver Cloud MongoDB.
      parameters:
      - in: formData
        name: databaseId
        type: string
      - in: formData
        name: gcpBucket
        type: string
      - in: formData
        name: gcpCredentialJson
        type: string
      - in: formData
        name: gcpRegion
        type: string
      - in: formData
        name: projectId
        type: string
      - in: formData
        name: databaseName
        type: string
      - in: formData
        name: host
        type: string
      - in: formData
        name: password
        type: string
      - in: formData
        name: port
        type: string
      - in: formData
        name: username
        type: string
      - description: Parameters required to generate test data
        in: formData
        name: gcpCredential
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Successfully migrated data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Migrate data from Firestore to MongoDB
      tags:
      - '[Data Migration]'
  /migration/gcp/linux:
    post:
      consumes:
      - multipart/form-data
      description: Migrate data stored in GCP Cloud Storage to a Linux-based system.
      parameters:
      - in: formData
        name: awsAccessKey
        type: string
      - in: formData
        name: awsBucket
        type: string
      - in: formData
        name: awsRegion
        type: string
      - in: formData
        name: awsSecretKey
        type: string
      - in: formData
        name: databaseId
        type: string
      - in: formData
        name: databaseName
        type: string
      - in: formData
        name: gcpBucket
        type: string
      - in: formData
        name: gcpCredentialJson
        type: string
      - in: formData
        name: gcpRegion
        type: string
      - in: formData
        name: host
        type: string
      - in: formData
        name: ncpAccessKey
        type: string
      - in: formData
        name: ncpBucket
        type: string
      - in: formData
        name: ncpEndpoint
        type: string
      - in: formData
        name: ncpRegion
        type: string
      - in: formData
        name: ncpSecretKey
        type: string
      - in: formData
        name: operationId
        type: string
      - in: formData
        name: password
        type: string
      - in: formData
        name: path
        type: string
      - in: formData
        name: port
        type: string
      - in: formData
        name: profileName
        type: string
      - in: formData
        name: projectId
        type: string
      - in: formData
        name: provider
        type: string
      - in: formData
        name: region
        type: string
      - in: formData
        name: username
        type: string
      - description: Parameters required for migration
        in: formData
        name: gcpCredential
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Successfully migrated data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "400":
          description: Invalid Request
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Migrate data from GCP to Linux
      tags:
      - '[Data Migration]'
  /migration/gcp/ncp:
    post:
      consumes:
      - multipart/form-data
      description: Migrate data stored in GCP Cloud Storage to NCP Object Storage.
      parameters:
      - in: formData
        name: awsAccessKey
        type: string
      - in: formData
        name: awsBucket
        type: string
      - in: formData
        name: awsRegion
        type: string
      - in: formData
        name: awsSecretKey
        type: string
      - in: formData
        name: databaseId
        type: string
      - in: formData
        name: databaseName
        type: string
      - in: formData
        name: gcpBucket
        type: string
      - in: formData
        name: gcpCredentialJson
        type: string
      - in: formData
        name: gcpRegion
        type: string
      - in: formData
        name: host
        type: string
      - in: formData
        name: ncpAccessKey
        type: string
      - in: formData
        name: ncpBucket
        type: string
      - in: formData
        name: ncpEndpoint
        type: string
      - in: formData
        name: ncpRegion
        type: string
      - in: formData
        name: ncpSecretKey
        type: string
      - in: formData
        name: operationId
        type: string
      - in: formData
        name: password
        type: string
      - in: formData
        name: path
        type: string
      - in: formData
        name: port
        type: string
      - in: formData
        name: profileName
        type: string
      - in: formData
        name: projectId
        type: string
      - in: formData
        name: provider
        type: string
      - in: formData
        name: region
        type: string
      - in: formData
        name: username
        type: string
      - description: Parameters required for migration
        in: formData
        name: gcpCredential
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Successfully migrated data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Migrate data from GCP to NCP Object Storage
      tags:
      - '[Data Migration]'
  /migration/gcp/s3:
    post:
      consumes:
      - multipart/form-data
      description: Migrate data stored in GCP Cloud Storage to AWS S3.
      parameters:
      - in: formData
        name: awsAccessKey
        type: string
      - in: formData
        name: awsBucket
        type: string
      - in: formData
        name: awsRegion
        type: string
      - in: formData
        name: awsSecretKey
        type: string
      - in: formData
        name: databaseId
        type: string
      - in: formData
        name: databaseName
        type: string
      - in: formData
        name: gcpBucket
        type: string
      - in: formData
        name: gcpCredentialJson
        type: string
      - in: formData
        name: gcpRegion
        type: string
      - in: formData
        name: host
        type: string
      - in: formData
        name: ncpAccessKey
        type: string
      - in: formData
        name: ncpBucket
        type: string
      - in: formData
        name: ncpEndpoint
        type: string
      - in: formData
        name: ncpRegion
        type: string
      - in: formData
        name: ncpSecretKey
        type: string
      - in: formData
        name: operationId
        type: string
      - in: formData
        name: password
        type: string
      - in: formData
        name: path
        type: string
      - in: formData
        name: port
        type: string
      - in: formData
        name: profileName
        type: string
      - in: formData
        name: projectId
        type: string
      - in: formData
        name: provider
        type: string
      - in: formData
        name: region
        type: string
      - in: formData
        name: username
        type: string
      - description: Parameters required for migration
        in: formData
        name: gcpCredential
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Successfully migrated data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Migrate data from GCP to AWS S3
      tags:
      - '[Data Migration]'
  /migration/gcp/windows:
    post:
      consumes:
      - multipart/form-data
      description: Migrate data stored in GCP Cloud Storage to a Windows-based system.
      parameters:
      - in: formData
        name: awsAccessKey
        type: string
      - in: formData
        name: awsBucket
        type: string
      - in: formData
        name: awsRegion
        type: string
      - in: formData
        name: awsSecretKey
        type: string
      - in: formData
        name: databaseId
        type: string
      - in: formData
        name: databaseName
        type: string
      - in: formData
        name: gcpBucket
        type: string
      - in: formData
        name: gcpCredentialJson
        type: string
      - in: formData
        name: gcpRegion
        type: string
      - in: formData
        name: host
        type: string
      - in: formData
        name: ncpAccessKey
        type: string
      - in: formData
        name: ncpBucket
        type: string
      - in: formData
        name: ncpEndpoint
        type: string
      - in: formData
        name: ncpRegion
        type: string
      - in: formData
        name: ncpSecretKey
        type: string
      - in: formData
        name: operationId
        type: string
      - in: formData
        name: password
        type: string
      - in: formData
        name: path
        type: string
      - in: formData
        name: port
        type: string
      - in: formData
        name: profileName
        type: string
      - in: formData
        name: projectId
        type: string
      - in: formData
        name: provider
        type: string
      - in: formData
        name: region
        type: string
      - in: formData
        name: username
        type: string
      - description: Parameters required for migration
        in: formData
        name: gcpCredential
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Successfully migrated data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "400":
          description: Invalid Request
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Migrate data from GCP to Windows
      tags:
      - '[Data Migration]'
  /migration/linux/gcp:
    post:
      consumes:
      - multipart/form-data
      description: Migrate data stored in a Linux-based system to GCP Cloud Storage.
      parameters:
      - in: formData
        name: awsAccessKey
        type: string
      - in: formData
        name: awsBucket
        type: string
      - in: formData
        name: awsRegion
        type: string
      - in: formData
        name: awsSecretKey
        type: string
      - in: formData
        name: databaseId
        type: string
      - in: formData
        name: databaseName
        type: string
      - in: formData
        name: gcpBucket
        type: string
      - in: formData
        name: gcpCredentialJson
        type: string
      - in: formData
        name: gcpRegion
        type: string
      - in: formData
        name: host
        type: string
      - in: formData
        name: ncpAccessKey
        type: string
      - in: formData
        name: ncpBucket
        type: string
      - in: formData
        name: ncpEndpoint
        type: string
      - in: formData
        name: ncpRegion
        type: string
      - in: formData
        name: ncpSecretKey
        type: string
      - in: formData
        name: operationId
        type: string
      - in: formData
        name: password
        type: string
      - in: formData
        name: path
        type: string
      - in: formData
        name: port
        type: string
      - in: formData
        name: profileName
        type: string
      - in: formData
        name: projectId
        type: string
      - in: formData
        name: provider
        type: string
      - in: formData
        name: region
        type: string
      - in: formData
        name: username
        type: string
      - description: Parameters required for migration
        in: formData
        name: gcpCredential
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Successfully migrated data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "400":
          description: Invalid Request
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Migrate data from Linux to GCP Cloud Storage
      tags:
      - '[Data Migration]'
  /migration/linux/ncp:
    post:
      consumes:
      - application/json
      description: Migrate data stored in a Linux-based system to NCP Object Storage.
      parameters:
      - description: Parameters required for migration
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/controllers.MigrationForm'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully migrated data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "400":
          description: Invalid Request
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Migrate data from Linux to NCP Object Storage
      tags:
      - '[Data Migration]'
  /migration/linux/s3:
    post:
      consumes:
      - application/json
      description: Migrate data stored in a Linux-based system to AWS S3.
      parameters:
      - description: Parameters required for migration
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/controllers.MigrationForm'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully migrated data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "400":
          description: Invalid Request
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Migrate data from Linux to AWS S3
      tags:
      - '[Data Migration]'
  /migration/mongodb/dynamodb:
    post:
      consumes:
      - application/json
      description: Migrate data stored in Naver Cloud MongoDB to AWS DynamoDB.
      parameters:
      - in: formData
        name: databaseName
        type: string
      - in: formData
        name: host
        type: string
      - in: formData
        name: password
        type: string
      - in: formData
        name: port
        type: string
      - in: formData
        name: username
        type: string
      - in: formData
        name: awsAccessKey
        type: string
      - in: formData
        name: awsBucket
        type: string
      - in: formData
        name: awsRegion
        type: string
      - in: formData
        name: awsSecretKey
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully migrated data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Migrate data from MongoDB to DynamoDB
      tags:
      - '[Data Migration]'
  /migration/mongodb/firestore:
    post:
      consumes:
      - multipart/form-data
      description: Migrate data stored in Naver Cloud MongoDB to Google Cloud Firestore.
      parameters:
      - in: formData
        name: databaseName
        type: string
      - in: formData
        name: host
        type: string
      - in: formData
        name: password
        type: string
      - in: formData
        name: port
        type: string
      - in: formData
        name: username
        type: string
      - in: formData
        name: databaseId
        type: string
      - in: formData
        name: gcpBucket
        type: string
      - in: formData
        name: gcpCredentialJson
        type: string
      - in: formData
        name: gcpRegion
        type: string
      - in: formData
        name: projectId
        type: string
      - description: Parameters required to generate test data
        in: formData
        name: gcpCredential
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Successfully migrated data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Migrate data from MongoDB to Firestore
      tags:
      - '[Data Migration]'
  /migration/mysql:
    post:
      consumes:
      - application/json
      description: Migrate data from one MySQL database to another MySQL database.
      parameters:
      - description: Parameters required for MySQL migration
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/controllers.MigrationMySQLForm'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully migrated data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Migrate data from MySQL to MySQL
      tags:
      - '[Data Migration]'
  /migration/ncp/gcp:
    post:
      consumes:
      - multipart/form-data
      description: Migrate data stored in NCP Object Storage to GCP Cloud Storage.
      parameters:
      - in: formData
        name: awsAccessKey
        type: string
      - in: formData
        name: awsBucket
        type: string
      - in: formData
        name: awsRegion
        type: string
      - in: formData
        name: awsSecretKey
        type: string
      - in: formData
        name: databaseId
        type: string
      - in: formData
        name: databaseName
        type: string
      - in: formData
        name: gcpBucket
        type: string
      - in: formData
        name: gcpCredentialJson
        type: string
      - in: formData
        name: gcpRegion
        type: string
      - in: formData
        name: host
        type: string
      - in: formData
        name: ncpAccessKey
        type: string
      - in: formData
        name: ncpBucket
        type: string
      - in: formData
        name: ncpEndpoint
        type: string
      - in: formData
        name: ncpRegion
        type: string
      - in: formData
        name: ncpSecretKey
        type: string
      - in: formData
        name: operationId
        type: string
      - in: formData
        name: password
        type: string
      - in: formData
        name: path
        type: string
      - in: formData
        name: port
        type: string
      - in: formData
        name: profileName
        type: string
      - in: formData
        name: projectId
        type: string
      - in: formData
        name: provider
        type: string
      - in: formData
        name: region
        type: string
      - in: formData
        name: username
        type: string
      - description: Parameters required to generate test data
        in: formData
        name: gcpCredential
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Successfully migrated data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Migrate data from NCP to GCP Cloud Storage
      tags:
      - '[Data Migration]'
  /migration/ncp/linux:
    post:
      consumes:
      - application/json
      description: Migrate data stored in NCP Object Storage to a Linux-based system.
      parameters:
      - description: Parameters required for Linux migration
        in: body
        name: LinuxMigrationParams
        required: true
        schema:
          $ref: '#/definitions/controllers.LinuxMigrationParams'
      - description: Parameters required for NCP migration
        in: body
        name: NCPMigrationParams
        required: true
        schema:
          $ref: '#/definitions/controllers.NCPMigrationParams'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully migrated data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "400":
          description: Invalid Request
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Migrate data from NCP to Linux
      tags:
      - '[Data Migration]'
  /migration/ncp/s3:
    post:
      consumes:
      - application/json
      description: Migrate data stored in NCP Object Storage to AWS S3.
      parameters:
      - description: Parameters required for migration
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/controllers.MigrationForm'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully migrated data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Migrate data from NCP to AWS S3
      tags:
      - '[Data Migration]'
  /migration/ncp/windows:
    post:
      consumes:
      - application/json
      description: Migrate data stored in NCP Object Storage to a Windows-based system.
      parameters:
      - description: Parameters required for migration
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/controllers.MigrationForm'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully migrated data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "400":
          description: Invalid Request
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Migrate data from NCP to Windows
      tags:
      - '[Data Migration]'
  /migration/s3/gcp:
    post:
      consumes:
      - multipart/form-data
      description: Migrate data stored in AWS S3 to Google Cloud Storage.
      parameters:
      - in: formData
        name: awsAccessKey
        type: string
      - in: formData
        name: awsBucket
        type: string
      - in: formData
        name: awsRegion
        type: string
      - in: formData
        name: awsSecretKey
        type: string
      - in: formData
        name: databaseId
        type: string
      - in: formData
        name: databaseName
        type: string
      - in: formData
        name: gcpBucket
        type: string
      - in: formData
        name: gcpCredentialJson
        type: string
      - in: formData
        name: gcpRegion
        type: string
      - in: formData
        name: host
        type: string
      - in: formData
        name: ncpAccessKey
        type: string
      - in: formData
        name: ncpBucket
        type: string
      - in: formData
        name: ncpEndpoint
        type: string
      - in: formData
        name: ncpRegion
        type: string
      - in: formData
        name: ncpSecretKey
        type: string
      - in: formData
        name: operationId
        type: string
      - in: formData
        name: password
        type: string
      - in: formData
        name: path
        type: string
      - in: formData
        name: port
        type: string
      - in: formData
        name: profileName
        type: string
      - in: formData
        name: projectId
        type: string
      - in: formData
        name: provider
        type: string
      - in: formData
        name: region
        type: string
      - in: formData
        name: username
        type: string
      - description: Parameters required to generate test data
        in: formData
        name: gcpCredential
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Successfully migrated data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Migrate data from AWS S3 to GCP
      tags:
      - '[Data Migration]'
  /migration/s3/linux:
    post:
      consumes:
      - application/json
      description: Migrate data stored in AWS S3 to a Linux-based system.
      parameters:
      - description: Parameters required for migration
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/controllers.MigrationForm'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully migrated data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "400":
          description: Invalid Request
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Migrate data from AWS S3 to Linux
      tags:
      - '[Data Migration]'
  /migration/s3/ncp:
    post:
      consumes:
      - application/json
      description: Migrate data stored in AWS S3 to Naver Cloud Object Storage.
      parameters:
      - description: Parameters required for migration
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/controllers.MigrationForm'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully migrated data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Migrate data from AWS S3 to NCP
      tags:
      - '[Data Migration]'
  /migration/s3/windows:
    post:
      consumes:
      - application/json
      description: Migrate data stored in AWS S3 to a Windows-based system.
      parameters:
      - description: Parameters required for migration
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/controllers.MigrationForm'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully migrated data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "400":
          description: Invalid Request
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Migrate data from AWS S3 to Windows
      tags:
      - '[Data Migration]'
  /migration/windows/gcp:
    post:
      consumes:
      - multipart/form-data
      description: Migrate data stored in a Windows-based system to GCP Cloud Storage.
      parameters:
      - in: formData
        name: awsAccessKey
        type: string
      - in: formData
        name: awsBucket
        type: string
      - in: formData
        name: awsRegion
        type: string
      - in: formData
        name: awsSecretKey
        type: string
      - in: formData
        name: databaseId
        type: string
      - in: formData
        name: databaseName
        type: string
      - in: formData
        name: gcpBucket
        type: string
      - in: formData
        name: gcpCredentialJson
        type: string
      - in: formData
        name: gcpRegion
        type: string
      - in: formData
        name: host
        type: string
      - in: formData
        name: ncpAccessKey
        type: string
      - in: formData
        name: ncpBucket
        type: string
      - in: formData
        name: ncpEndpoint
        type: string
      - in: formData
        name: ncpRegion
        type: string
      - in: formData
        name: ncpSecretKey
        type: string
      - in: formData
        name: operationId
        type: string
      - in: formData
        name: password
        type: string
      - in: formData
        name: path
        type: string
      - in: formData
        name: port
        type: string
      - in: formData
        name: profileName
        type: string
      - in: formData
        name: projectId
        type: string
      - in: formData
        name: provider
        type: string
      - in: formData
        name: region
        type: string
      - in: formData
        name: username
        type: string
      - description: Parameters required for migration
        in: formData
        name: gcpCredential
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Successfully migrated data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "400":
          description: Invalid Request
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Migrate data from Windows to GCP Cloud Storage
      tags:
      - '[Data Migration]'
  /migration/windows/ncp:
    post:
      consumes:
      - application/json
      description: Migrate data stored in a Windows-based system to NCP Object Storage.
      parameters:
      - description: Parameters required for migration
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/controllers.MigrationForm'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully migrated data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "400":
          description: Invalid Request
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Migrate data from Windows to NCP Object Storage
      tags:
      - '[Data Migration]'
  /migration/windows/s3:
    post:
      consumes:
      - application/json
      description: Migrate data stored in a Windows-based system to AWS S3.
      parameters:
      - description: Parameters required for migration
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/controllers.MigrationForm'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully migrated data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "400":
          description: Invalid Request
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Migrate data from Windows to AWS S3
      tags:
      - '[Data Migration]'
swagger: "2.0"
